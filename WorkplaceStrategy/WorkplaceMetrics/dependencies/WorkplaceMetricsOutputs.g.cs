// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar init'.
// DO NOT EDIT THIS FILE.

using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Hypar.Functions;
using Hypar.Functions.Execution;
using Hypar.Functions.Execution.AWS;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.Collections.Generic;

namespace WorkplaceMetrics
{
    public class WorkplaceMetricsOutputs: SystemResults
    {
		/// <summary>
		/// The total floor area of the project.
		/// </summary>
		[JsonProperty("Floor Area")]
		public double FloorArea {get; set;}

		/// <summary>
		/// The usable floor area per person.
		/// </summary>
		[JsonProperty("Area per Headcount")]
		public double AreaPerHeadcount {get; set;}

		/// <summary>
		/// The total number of desks.
		/// </summary>
		[JsonProperty("Total Desk Count")]
		public double TotalDeskCount {get; set;}

		/// <summary>
		/// The total number of seats in the meeting rooms.
		/// </summary>
		[JsonProperty("Meeting room seats")]
		public double MeetingRoomSeats {get; set;}

		/// <summary>
		/// The total number of classroom seats.
		/// </summary>
		[JsonProperty("Classroom seats")]
		public double ClassroomSeats {get; set;}

		/// <summary>
		/// Total number of Phone booths.
		/// </summary>
		[JsonProperty("Phone Booths")]
		public double PhoneBooths {get; set;}

		/// <summary>
		/// Total seats in open collaboration areas.
		/// </summary>
		[JsonProperty("Collaboration seats")]
		public double CollaborationSeats {get; set;}

		/// <summary>
		/// The total number of employees and visitors accommodated.
		/// </summary>
		[JsonProperty("Total Headcount")]
		public double TotalHeadcount {get; set;}

		/// <summary>
		/// The usable floor area per desk.
		/// </summary>
		[JsonProperty("Area per Desk")]
		public double AreaPerDesk {get; set;}

		/// <summary>
		/// How many people are there for each desk?
		/// </summary>
		[JsonProperty("Desk Sharing Ratio")]
		public double DeskSharingRatio {get; set;}

		/// <summary>
		/// On average how many people does each meeting room serve? A value of 30 means there's one meeting room for every 30 people.
		/// </summary>
		[JsonProperty("Meeting room ratio")]
		public double MeetingRoomRatio {get; set;}

		/// <summary>
		/// Total number of private offices.
		/// </summary>
		[JsonProperty("Private Office Count")]
		public double PrivateOfficeCount {get; set;}

		/// <summary>
		/// The ratio of circulation area to usable floor area.
		/// </summary>
		[JsonProperty("Circulation / USF Ratio")]
		public double CirculationUSFRatio {get; set;}

		/// <summary>
		/// The ratio of circulation area to rentable floor area.
		/// </summary>
		[JsonProperty("Circulation / RSF Ratio")]
		public double CirculationRSFRatio {get; set;}



        /// <summary>
        /// Construct a WorkplaceMetricsOutputs with default inputs.
        /// This should be used for testing only.
        /// </summary>
        public WorkplaceMetricsOutputs() : base()
        {

        }


        /// <summary>
        /// Construct a WorkplaceMetricsOutputs specifying all inputs.
        /// </summary>
        /// <returns></returns>
        [JsonConstructor]
        public WorkplaceMetricsOutputs(double floorArea, double areaPerHeadcount, double totalDeskCount, double meetingRoomSeats, double classroomSeats, double phoneBooths, double collaborationSeats, double totalHeadcount, double areaPerDesk, double deskSharingRatio, double meetingRoomRatio, double privateOfficeCount, double circulationUSFRatio, double circulationRSFRatio): base()
        {
			this.FloorArea = floorArea;
			this.AreaPerHeadcount = areaPerHeadcount;
			this.TotalDeskCount = totalDeskCount;
			this.MeetingRoomSeats = meetingRoomSeats;
			this.ClassroomSeats = classroomSeats;
			this.PhoneBooths = phoneBooths;
			this.CollaborationSeats = collaborationSeats;
			this.TotalHeadcount = totalHeadcount;
			this.AreaPerDesk = areaPerDesk;
			this.DeskSharingRatio = deskSharingRatio;
			this.MeetingRoomRatio = meetingRoomRatio;
			this.PrivateOfficeCount = privateOfficeCount;
			this.CirculationUSFRatio = circulationUSFRatio;
			this.CirculationRSFRatio = circulationRSFRatio;

		}

		public override string ToString()
		{
			var json = JsonConvert.SerializeObject(this);
			return json;
		}
	}
}