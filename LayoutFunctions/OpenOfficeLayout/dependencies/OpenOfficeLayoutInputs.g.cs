// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar init'.
// DO NOT EDIT THIS FILE.

using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Elements.Geometry.Solids;
using Elements.Validators;
using Elements.Serialization.JSON;
using Hypar.Functions;
using Hypar.Functions.Execution;
using Hypar.Functions.Execution.AWS;
using Hypar.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using Line = Elements.Geometry.Line;
using Polygon = Elements.Geometry.Polygon;

namespace OpenOfficeLayout
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    
    public  class OpenOfficeLayoutInputs : ArgsBase
    
    {
        [Newtonsoft.Json.JsonConstructor]
        
        public OpenOfficeLayoutInputs(double @gridRotation, double @integratedCollaborationSpaceDensity, double @aisleWidth, double @backToBackWidth, OpenOfficeLayoutInputsDeskType @deskType, OpenOfficeLayoutInputsColumnAvoidanceStrategy @columnAvoidanceStrategy, CustomWorkstationProperties @customWorkstationProperties, Overrides @overrides, Dictionary<string, string> modelInputKeys, string gltfKey, string elementsKey, string ifcKey):
        base(modelInputKeys, gltfKey, elementsKey, ifcKey)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<OpenOfficeLayoutInputs>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @gridRotation, @integratedCollaborationSpaceDensity, @aisleWidth, @backToBackWidth, @deskType, @columnAvoidanceStrategy, @customWorkstationProperties, @overrides});
            }
        
            this.GridRotation = @gridRotation;
            this.IntegratedCollaborationSpaceDensity = @integratedCollaborationSpaceDensity;
            this.AisleWidth = @aisleWidth;
            this.BackToBackWidth = @backToBackWidth;
            this.DeskType = @deskType;
            this.ColumnAvoidanceStrategy = @columnAvoidanceStrategy;
            this.CustomWorkstationProperties = @customWorkstationProperties;
            this.Overrides = @overrides ?? this.Overrides;
        
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        [Newtonsoft.Json.JsonProperty("Grid Rotation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 360D)]
        public double GridRotation { get; set; } = 0D;
    
        /// <summary>Increase this number to add more distributed collaboration spaces throughout open office areas.</summary>
        [Newtonsoft.Json.JsonProperty("Integrated Collaboration Space Density", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 1D)]
        public double IntegratedCollaborationSpaceDensity { get; set; } = 0.2D;
    
        /// <summary>The width of the aisle between desks, measured from side to side.</summary>
        [Newtonsoft.Json.JsonProperty("Aisle Width", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0.5D, 2D)]
        public double AisleWidth { get; set; } = 1D;
    
        /// <summary>The width of the space between rows of desks, measured from back of seat to back of seat.</summary>
        [Newtonsoft.Json.JsonProperty("Back-to-Back Width", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0.5D, 2.0D)]
        public double BackToBackWidth { get; set; } = 1D;
    
        [Newtonsoft.Json.JsonProperty("Desk Type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public OpenOfficeLayoutInputsDeskType DeskType { get; set; } = OpenOfficeLayoutInputsDeskType.Simple_Desk__29x70;
    
        [Newtonsoft.Json.JsonProperty("Column Avoidance Strategy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public OpenOfficeLayoutInputsColumnAvoidanceStrategy ColumnAvoidanceStrategy { get; set; } = OpenOfficeLayoutInputsColumnAvoidanceStrategy.Adaptive_Grid;
    
        [Newtonsoft.Json.JsonProperty("Custom Workstation Properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CustomWorkstationProperties CustomWorkstationProperties { get; set; }
    
        [Newtonsoft.Json.JsonProperty("overrides", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Overrides Overrides { get; set; } = new Overrides();
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum OpenOfficeLayoutInputsDeskType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Simple Desk - 24x48")]
        Simple_Desk__24x48 = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Simple Desk - 30x60")]
        Simple_Desk__30x60 = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Simple Desk - 29x70")]
        Simple_Desk__29x70 = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Simple Desk - 30x72")]
        Simple_Desk__30x72 = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"L-Shaped")]
        LShaped = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Double Desk")]
        Double_Desk = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Enclosed Pair")]
        Enclosed_Pair = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"120° Workstations - Pairs")]
        _120__Workstations__Pairs = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"120° Workstations - Continuous")]
        _120__Workstations__Continuous = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Custom")]
        Custom = 9,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum OpenOfficeLayoutInputsColumnAvoidanceStrategy
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Adaptive Grid")]
        Adaptive_Grid = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Cull")]
        Cull = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    
    public partial class CustomWorkstationProperties 
    
    {
        [Newtonsoft.Json.JsonConstructor]
        public CustomWorkstationProperties(double @width, double @length)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<CustomWorkstationProperties>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @width, @length});
            }
        
            this.Width = @width;
            this.Length = @length;
        
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        [Newtonsoft.Json.JsonProperty("Width", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0.1D, double.MaxValue)]
        public double Width { get; set; } = 2D;
    
        [Newtonsoft.Json.JsonProperty("Length", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0.1D, double.MaxValue)]
        public double Length { get; set; } = 2D;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    
    public partial class Overrides 
    
    {
        public Overrides() { }
        
        [Newtonsoft.Json.JsonConstructor]
        public Overrides(IList<SpaceSettingsOverride> @spaceSettings, IList<FurnitureLocationsOverride> @furnitureLocations)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<Overrides>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @spaceSettings, @furnitureLocations});
            }
        
            this.SpaceSettings = @spaceSettings ?? this.SpaceSettings;
            this.FurnitureLocations = @furnitureLocations ?? this.FurnitureLocations;
        
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        [Newtonsoft.Json.JsonProperty("Space Settings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IList<SpaceSettingsOverride> SpaceSettings { get; set; } = new List<SpaceSettingsOverride>();
    
        [Newtonsoft.Json.JsonProperty("Furniture Locations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IList<FurnitureLocationsOverride> FurnitureLocations { get; set; } = new List<FurnitureLocationsOverride>();
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    
    public partial class SpaceSettingsOverride 
    
    {
        [Newtonsoft.Json.JsonConstructor]
        public SpaceSettingsOverride(string @id, SpaceSettingsIdentity @identity, SpaceSettingsValue @value)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<SpaceSettingsOverride>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @id, @identity, @value});
            }
        
            this.Id = @id;
            this.Identity = @identity;
            this.Value = @value;
        
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Identity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SpaceSettingsIdentity Identity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Value", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SpaceSettingsValue Value { get; set; }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    
    public partial class FurnitureLocationsOverride 
    
    {
        [Newtonsoft.Json.JsonConstructor]
        public FurnitureLocationsOverride(string @id, FurnitureLocationsIdentity @identity, FurnitureLocationsValue @value)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<FurnitureLocationsOverride>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @id, @identity, @value});
            }
        
            this.Id = @id;
            this.Identity = @identity;
            this.Value = @value;
        
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Identity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FurnitureLocationsIdentity Identity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Value", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FurnitureLocationsValue Value { get; set; }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    
    public partial class SpaceSettingsIdentity 
    
    {
        [Newtonsoft.Json.JsonConstructor]
        public SpaceSettingsIdentity(Vector3 @parentCentroid)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<SpaceSettingsIdentity>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @parentCentroid});
            }
        
            this.ParentCentroid = @parentCentroid;
        
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        [Newtonsoft.Json.JsonProperty("ParentCentroid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Vector3 ParentCentroid { get; set; }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    
    public partial class SpaceSettingsValue 
    
    {
        [Newtonsoft.Json.JsonConstructor]
        public SpaceSettingsValue(double @gridRotation, double @integratedCollaborationSpaceDensity, double @aisleWidth, double @backToBackWidth, SpaceSettingsValueDeskType @deskType, SpaceSettingsValueCustomWorkstationProperties @customWorkstationProperties)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<SpaceSettingsValue>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @gridRotation, @integratedCollaborationSpaceDensity, @aisleWidth, @backToBackWidth, @deskType, @customWorkstationProperties});
            }
        
            this.GridRotation = @gridRotation;
            this.IntegratedCollaborationSpaceDensity = @integratedCollaborationSpaceDensity;
            this.AisleWidth = @aisleWidth;
            this.BackToBackWidth = @backToBackWidth;
            this.DeskType = @deskType;
            this.CustomWorkstationProperties = @customWorkstationProperties;
        
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        [Newtonsoft.Json.JsonProperty("Grid Rotation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 360D)]
        public double GridRotation { get; set; } = 0D;
    
        /// <summary>Increase this number to add more distributed collaboration spaces throughout open office areas.</summary>
        [Newtonsoft.Json.JsonProperty("Integrated Collaboration Space Density", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 1D)]
        public double IntegratedCollaborationSpaceDensity { get; set; } = 0.2D;
    
        /// <summary>The width of the aisle between desks, measured from side to side.</summary>
        [Newtonsoft.Json.JsonProperty("Aisle Width", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0.5D, 2D)]
        public double AisleWidth { get; set; } = 1D;
    
        /// <summary>The width of the space between rows of desks, measured from back of seat to back of seat.</summary>
        [Newtonsoft.Json.JsonProperty("Back-to-Back Width", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0.5D, 2.0D)]
        public double BackToBackWidth { get; set; } = 1D;
    
        [Newtonsoft.Json.JsonProperty("Desk Type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public SpaceSettingsValueDeskType DeskType { get; set; } = SpaceSettingsValueDeskType.Simple_Desk__29x70;
    
        [Newtonsoft.Json.JsonProperty("Custom Workstation Properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SpaceSettingsValueCustomWorkstationProperties CustomWorkstationProperties { get; set; }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    
    public partial class FurnitureLocationsIdentity 
    
    {
        [Newtonsoft.Json.JsonConstructor]
        public FurnitureLocationsIdentity(Vector3 @originalLocation, string @gltfLocation)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<FurnitureLocationsIdentity>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @originalLocation, @gltfLocation});
            }
        
            this.OriginalLocation = @originalLocation;
            this.GltfLocation = @gltfLocation;
        
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        [Newtonsoft.Json.JsonProperty("OriginalLocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Vector3 OriginalLocation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gltfLocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string GltfLocation { get; set; }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    
    public partial class FurnitureLocationsValue 
    
    {
        [Newtonsoft.Json.JsonConstructor]
        public FurnitureLocationsValue(Transform @transform)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<FurnitureLocationsValue>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @transform});
            }
        
            this.Transform = @transform;
        
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        [Newtonsoft.Json.JsonProperty("Transform", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Transform Transform { get; set; }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum SpaceSettingsValueDeskType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Simple Desk - 24x48")]
        Simple_Desk__24x48 = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Simple Desk - 30x60")]
        Simple_Desk__30x60 = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Simple Desk - 29x70")]
        Simple_Desk__29x70 = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Simple Desk - 30x72")]
        Simple_Desk__30x72 = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"L-Shaped")]
        LShaped = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Double Desk")]
        Double_Desk = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Enclosed Pair")]
        Enclosed_Pair = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"120° Workstations - Pairs")]
        _120__Workstations__Pairs = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = @"120° Workstations - Continuous")]
        _120__Workstations__Continuous = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Custom")]
        Custom = 9,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    
    public partial class SpaceSettingsValueCustomWorkstationProperties 
    
    {
        [Newtonsoft.Json.JsonConstructor]
        public SpaceSettingsValueCustomWorkstationProperties(double @width, double @length)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<SpaceSettingsValueCustomWorkstationProperties>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @width, @length});
            }
        
            this.Width = @width;
            this.Length = @length;
        
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        [Newtonsoft.Json.JsonProperty("Width", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0.1D, double.MaxValue)]
        public double Width { get; set; } = 2D;
    
        [Newtonsoft.Json.JsonProperty("Length", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0.1D, double.MaxValue)]
        public double Length { get; set; } = 2D;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    }
}